{{
OBEX LISTING:
  http://obex.parallax.com/object/413

  Supports upto 4 serial ports with 1 COG. Also supports hardware flow control on any of the ports.

  Fixed issue with 4th port. All 4 ports now tested and working.
  Added additional test programs in download.
  Added comment and version variable if need multiple copies of driver (i.e. more than 4 ports)
}}
{
  test for 4 port serial driver
  assumes P0 connected to P4, P1 to P5 and P2 to P6
}
con
  _clkmode = xtal1 + pll16x '
  _xinfreq = 6_000_000 '

obj
  uartsin  : "pcFullDuplexSerial4FC"  '1 COG for 4 serial ports
  uartsout : "pcFullDuplexSerial4FC1" '1 COG for 4 serial ports, generated by copying pcFullDuplexSerial4FC.spin unchanged to new filename 
  debug    : "pcFullDuplexSerial4FC2" '1 COG for 4 serial ports, generated by copying pcFullDuplexSerial4FC.spin unchanged to new filename
  
pub main | i,j,k
  waitcnt(clkfreq*3 + cnt)

  debug.Init
  debug.AddPort(0,31,30,UARTSIN#PINNOTUSED,UARTSIN#PINNOTUSED,UARTSIN#DEFAULTTHRESHOLD, {
} UARTSIN#NOMODE,UARTSIN#BAUD115200)
  debug.Start

'must start tx before rx, otherwise pins are not in correct state       
  uartsout.Init
  uartsout.AddPort(0,UARTSOUT#PINNOTUSED,4,UARTSOUT#PINNOTUSED,UARTSOUT#PINNOTUSED,UARTSOUT#DEFAULTTHRESHOLD, {
} UARTSOUT#NOMODE,UARTSOUT#BAUD115200)
  uartsout.AddPort(1,UARTSOUT#PINNOTUSED,5,UARTSOUT#PINNOTUSED,UARTSOUT#PINNOTUSED,UARTSOUT#DEFAULTTHRESHOLD, {
} UARTSOUT#NOMODE,UARTSOUT#BAUD115200)
  uartsout.AddPort(2,UARTSOUT#PINNOTUSED,6,UARTSOUT#PINNOTUSED,UARTSOUT#PINNOTUSED,UARTSOUT#DEFAULTTHRESHOLD, {
} UARTSOUT#NOMODE,UARTSOUT#BAUD115200)
  uartsout.Start                                        'Start the ports

  uartsin.Init
  uartsin.AddPort(0,0,UARTSIN#PINNOTUSED,UARTSIN#PINNOTUSED,UARTSIN#PINNOTUSED,UARTSIN#DEFAULTTHRESHOLD, {
} UARTSIN#NOMODE,UARTSIN#BAUD115200)
  uartsin.AddPort(1,1,UARTSIN#PINNOTUSED,UARTSIN#PINNOTUSED,UARTSIN#PINNOTUSED,UARTSIN#DEFAULTTHRESHOLD, {
} UARTSIN#NOMODE,UARTSIN#BAUD115200)
  uartsin.AddPort(2,2,UARTSIN#PINNOTUSED,UARTSIN#PINNOTUSED,UARTSIN#PINNOTUSED,UARTSIN#DEFAULTTHRESHOLD, {
} UARTSIN#NOMODE,UARTSIN#BAUD115200)
  uartsin.Start                                         'Start the ports

  debug.str(0,string("serial test2",13))

  i := 0  

  repeat
    repeat j from 0 to 2
      uartsout.tx(j, i)                                 'tx on each port
    waitcnt(clkfreq/10 + cnt)                           'give enough time to receive
    repeat j from 0 to 2                                'for each port
      debug.dec(0,j)                                    'print port we are checking
      debug.tx(0,":")
      debug.dec(0,i)                                    'print expected number
      debug.tx(0,":")
      k := uartsin.rxcheck(j)                           'should have something
      repeat while k <> -1
        debug.dec(0,k)                                  'print what we got
        debug.tx(0," ")
        k := uartsin.rxcheck(j)                         'see if anything else (shouldn't be)
      debug.tx(0,13)                                    'next line for next port
    i++
              
