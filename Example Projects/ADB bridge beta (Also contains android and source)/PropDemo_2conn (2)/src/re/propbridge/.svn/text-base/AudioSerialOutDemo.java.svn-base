/* LICENSE: You can do whatever you want with this, on four conditions.
 * 1) Share and share alike. This means source, too.
 * 2) Acknowledge attribution to spiritplumber@gmail.com in your code.
 * 3) Email me to tell me what you're doing with this code! I love to know people are doing cool stuff!
 * 4) You may NOT use this code in any sort of weapon.
 */

package re.propbridge;

import android.app.Activity;
import android.content.Intent;
import android.content.pm.ActivityInfo;
import android.os.Bundle;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

public class AudioSerialOutDemo extends Activity {

	static public final char cr = (char) 13; // because i don't want to type that in every time
	static public final char lf = (char) 10; // because i don't want to type that in every time
	public boolean interactive = false;
	public String datatosend = "";

	// copy and paste the function below to operate the audio serial stuff from another application; edit to suit
	public void example() {
		Intent serialout = new Intent();
		serialout.setClassName("re.propbridge", "re.propbridge.propbridge");
		serialout.putExtra("BAUD", "4800");
		serialout.putExtra("DATA","String_to_send");
		startActivity(serialout);
	}
	
	// or from commandline: $ am start -a android.intent.action.MAIN -n re.propbridge/re.propbridge.propbridge -e DATA String_to_send -e BAUD 4800
	// copy and paste the function above to operate the audio serial stuff from another application; edit to suit

	@Override
	public void onCreate(Bundle savedInstanceState) {
		
		AudioSerialOutMono.activate();

		// first, decide if we're in interactive (demo) mode or in "spam out serial data and then exit" mode.
		try{
			interactive=false;
			Bundle bundle = getIntent().getExtras();
			if (bundle.containsKey("BAUD"))
				AudioSerialOutMono.new_baudRate = Integer.parseInt(bundle.getString("BAUD"));
			if (bundle.containsKey("CHD"))
				AudioSerialOutMono.new_characterdelay = Integer.parseInt(bundle.getString("CHD"));
			if (bundle.containsKey("DATA"))
				datatosend = (bundle.getString("DATA"));
			else
				interactive=true;
		}catch(Exception e){interactive=true;e.printStackTrace();}

		// Do your thing and exit
		if (interactive==false)
		{
			AudioSerialOutMono.UpdateParameters(true);
			AudioSerialOutMono.output(datatosend+cr+lf);
			super.onCreate(savedInstanceState);
			this.finish();
		}
		
		// Show demo output
		if (interactive==true)
		{
			super.onCreate(savedInstanceState);
		setContentView(R.layout.main);
		this.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);

		final EditText editbox = (EditText) findViewById(R.id.EditText01);
		final EditText baudbox = (EditText) findViewById(R.id.EditText02);
		final EditText charbox = (EditText) findViewById(R.id.EditText03);
		final Button savebutton = (Button) findViewById(R.id.Button01 );
		editbox.setText("Audio Serial Out Demo by mkb@robots-everywhere.com"+lf+"http://bit.ly/bOVi2d"+lf+"See our wiki for circuit schematics and layout!");
		baudbox.setText(""+AudioSerialOutMono.new_baudRate);
		charbox.setText(""+AudioSerialOutMono.new_characterdelay);
		savebutton.setOnClickListener(new View.OnClickListener() {
			public void onClick(View view) {

				try{
					AudioSerialOutMono.new_baudRate = Integer.parseInt(baudbox.getText().toString());
				}catch(Exception e){
					AudioSerialOutMono.new_baudRate = 4800;
					baudbox.setText("4800");
				}
				try{
					AudioSerialOutMono.new_characterdelay = Integer.parseInt(charbox.getText().toString());
				}catch(Exception e){
					AudioSerialOutMono.new_characterdelay = 0;
					charbox.setText("0");
				}
				AudioSerialOutMono.UpdateParameters(true);
				AudioSerialOutMono.output(cr+editbox.getText().toString()+cr);
			}
		});
		}

	}

	public boolean onCreateOptionsMenu(Menu menu) {
		// these show up in the primary screen: out of order for display reasons
		menu.add(0, 0, 0, "EXITING");
		return true;
	}
	public boolean onPrepareOptionsMenu(Menu menu) {
		android.os.Process.killProcess(android.os.Process.myPid());
		return true;
	}


}

